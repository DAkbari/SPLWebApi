{"version":3,"sources":["../../bin/www.js"],"names":[],"mappings":"AAAA;;AAEA;;;;;AAIA,IAAI,GAAG,GAAG,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAD,CAAP,CAAiB,kBAAjB,CAAZ;;AACA,IAAI,IAAI,GAAG,OAAO,CAAC,MAAD,CAAlB;AAEA;;;;;AAIA,IAAI,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,GAAR,CAAY,IAAZ,IAAoB,MAArB,CAAxB;AACA,GAAG,CAAC,GAAJ,CAAQ,MAAR,EAAgB,IAAhB;AAEA;;;;AAIA,IAAI,MAAM,GAAG,IAAI,CAAC,YAAL,CAAkB,GAAlB,CAAb;AAEA;;;;AAKA,MAAM,CAAC,MAAP,CAAc,IAAd;AACA,MAAM,CAAC,EAAP,CAAU,OAAV,EAAmB,OAAnB;AACA,MAAM,CAAC,EAAP,CAAU,WAAV,EAAuB,WAAvB;AAEA;;;;AAIA,SAAS,aAAT,CAAuB,GAAvB,EAA4B;AAC1B,MAAI,IAAI,GAAG,QAAQ,CAAC,GAAD,EAAM,EAAN,CAAnB;;AAEA,MAAI,KAAK,CAAC,IAAD,CAAT,EAAiB;AACf;AACA,WAAO,GAAP;AACD;;AAED,MAAI,IAAI,IAAI,CAAZ,EAAe;AACb;AACA,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD;AAED;;;;;AAIA,SAAS,OAAT,CAAiB,KAAjB,EAAwB;AACtB,MAAI,KAAK,CAAC,OAAN,KAAkB,QAAtB,EAAgC;AAC9B,UAAM,KAAN;AACD;;AAED,MAAI,IAAI,GAAG,OAAO,IAAP,KAAgB,QAAhB,GACP,UAAU,IADH,GAEP,UAAU,IAFd,CALsB,CAStB;;AACA,UAAQ,KAAK,CAAC,IAAd;AACE,SAAK,QAAL;AACE,MAAA,OAAO,CAAC,KAAR,CAAc,IAAI,GAAG,+BAArB;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,CAAb;AACA;;AACF,SAAK,YAAL;AACE,MAAA,OAAO,CAAC,KAAR,CAAc,IAAI,GAAG,oBAArB;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,CAAb;AACA;;AACF;AACE,YAAM,KAAN;AAVJ;AAYD;AAED;;;;;AAIA,SAAS,WAAT,GAAuB;AACrB,MAAI,IAAI,GAAG,MAAM,CAAC,OAAP,EAAX;AACA,MAAI,IAAI,GAAG,OAAO,IAAP,KAAgB,QAAhB,GACP,UAAU,IADH,GAEP,UAAU,IAAI,CAAC,IAFnB;AAGA,EAAA,KAAK,CAAC,kBAAkB,IAAnB,CAAL;AACD","file":"www.js","sourcesContent":["#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar app = require('../app');\nvar debug = require('debug')('splwebapi:server');\nvar http = require('http');\n\n/**\n * Get port from environment and store in Express.\n */\n\nvar port = normalizePort(process.env.PORT || '3000');\napp.set('port', port);\n\n/**\n * Create HTTP server.\n */\n\nvar server = http.createServer(app);\n\n/**\n * Listen on provided port, on all network interfaces.\n */\n\n\nserver.listen(port);\nserver.on('error', onError);\nserver.on('listening', onListening);\n\n/**\n * Normalize a port into a number, string, or false.\n */\n\nfunction normalizePort(val) {\n  var port = parseInt(val, 10);\n\n  if (isNaN(port)) {\n    // named pipe\n    return val;\n  }\n\n  if (port >= 0) {\n    // port number\n    return port;\n  }\n\n  return false;\n}\n\n/**\n * Event listener for HTTP server \"error\" event.\n */\n\nfunction onError(error) {\n  if (error.syscall !== 'listen') {\n    throw error;\n  }\n\n  var bind = typeof port === 'string'\n    ? 'Pipe ' + port\n    : 'Port ' + port;\n\n  // handle specific listen errors with friendly messages\n  switch (error.code) {\n    case 'EACCES':\n      console.error(bind + ' requires elevated privileges');\n      process.exit(1);\n      break;\n    case 'EADDRINUSE':\n      console.error(bind + ' is already in use');\n      process.exit(1);\n      break;\n    default:\n      throw error;\n  }\n}\n\n/**\n * Event listener for HTTP server \"listening\" event.\n */\n\nfunction onListening() {\n  var addr = server.address();\n  var bind = typeof addr === 'string'\n    ? 'pipe ' + addr\n    : 'port ' + addr.port;\n  debug('Listening on ' + bind);\n}\n"]}